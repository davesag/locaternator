/*!
 * A jQuery plugin for specific location finding and displaying - v1.2.0 - 2016-02-20
 * https://github.com/davesag/locaternator
 * Copyright (c) 2016 Dave Sag; Licensed MIT
 */

(function(){if("undefined"==typeof jQuery)throw"Expected jQuery to have been loaded before this script.";if("undefined"==typeof async)throw"Expected async to have been loaded before this script."}).call(this),function(){!function(a,b,c){var d,e;return d=function(a,b){var c,d,e,f,g,h,i;return c=6371,e=a.lat*Math.PI/180,f=b.lat*Math.PI/180,h=(b.lat-a.lat)*Math.PI/180,i=(b.lon-a.lon)*Math.PI/180,d=Math.sin(h/2)*Math.sin(h/2)+Math.cos(e)*Math.cos(f)*Math.sin(i/2)*Math.sin(i/2),g=2*Math.atan2(Math.sqrt(d),Math.sqrt(1-d)),c*g},e=function(a,b){var c,e,f,g,h,i,j;for(h=[],i=0,j=b.length;j>i;i++)e=b[i],c=d(a,e.coordinate),h.push({location:e,distance:c});return h.sort(function(a,b){return a.distance-b.distance}),f=function(){var a,b,c;for(c=[],a=0,b=h.length;b>a;a++)g=h[a],c.push(g.location);return c}()},a.Locaternator=function(d){var f,g,h,i,j,k;return k=a.extend(!0,{},a.Locaternator.options),this.options="object"==typeof d?a.extend(!0,k,d):k,h=function(b){return function(c){b.options.currentLocation?g(function(a,d){return f(b.options.currentLocation,d,c)}):(k={url:b.options.service().jsonURL,dataType:b.options.service().dataType},a.ajax(k).done(function(a){var d,e;d={latitude:a.latitude,longitude:a.longitude,name:a.city,address:{subnationalDivision:a[b.options.service().fields.region],country:{name:a[b.options.service().fields.country],code:a.country_code}}},void 0!==d.latitude&&void 0!==d.longitude||"string"!=typeof a[b.options.service().fields.location]||(e=a[b.options.service().fields.location].split(","),d.latitude=parseFloat(e[0]),d.longitude=parseFloat(e[1])),c(null,d)}))}}(this),g=function(b){return function(c){a.getJSON(b.options.geonames.account,function(a){c(null,a.username)})}}(this),f=function(b,c,d){var e;e={url:"http://api.geonames.org/findNearbyPlaceNameJSON?lat="+b.lat+"&lng="+b.lon+"&username="+c+"&maxRows=1",dataType:"jsonp",success:function(a){var c,e,f,g,h,i;return(null!=(e=a.geonames)?e.length:void 0)>0?(c={latitude:b.lat,longitude:b.lon,name:null!=(f=a.geonames[0])?f.toponymName:void 0,address:{subnationalDivision:null!=(g=a.geonames[0])?g.adminName1:void 0,country:{name:null!=(h=a.geonames[0])?h.countryName:void 0,code:null!=(i=a.geonames[0])?i.countryCode:void 0}}},d(null,c)):(console.error("findNearbyPlaceName returned error",a),d(a,null))}},a.ajax(e)},j=function(b){return function(c){return"string"==typeof b.options.locations||b.options.locations instanceof Array?""===b.options.locations?void c(null,[]):b.options.locations instanceof Array?void c(null,b.options.locations):void a.getJSON(b.options.locations,function(a){c(null,a)}):void c("expected locations option to be a string or array",null)}}(this),i={location:h,locations:j},b.parallel(i,function(b,d){var f,g,h;b?(console.error("got error",b),a(c).trigger("locaternated-error",[b])):(g={lat:d.location.latitude,lon:d.location.longitude},h=[],f=void 0,d.locations.length>0&&(h=e(g,d.locations),f=h.shift()),a(c).trigger("locaternated",[d.location,f,h]))})},a.Locaternator.options={service:function(){return this.locationServices[this.locationServices["default"]]},locations:"",locationServices:{"default":"ipinfo",ipinfo:{jsonURL:"http://ipinfo.io",dataType:"json",fields:{region:"region",country:"country",location:"loc"}},geoIP:{jsonURL:"http://freegeoip.net/json/",dataType:"jsonp",fields:{region:"region_name",country:"country_name"}}},currentLocation:null,geonames:{account:"/data/geonamesCredentials.json"}}}(jQuery,async,document)}.call(this);
//# sourceMappingURL=jquery-locaternator.1.2.0.min.js.map